{"version":3,"sources":["data/loop_me.js","utils/CustomDateUtils.js","data/cv_data.js","data/CurrentSkills.js","data/Nix.js","data/intellias.js","data/ciklum.js","data/privat/BRTP.js","data/privat/P24.js","components/cv/Header.js","components/cv/About.js","components/cv/Contacts.js","components/cv/Views.js","components/cv/Education.js","components/cv/Skills.js","components/cv/Photo.js","components/cv/ExpList.js","components/cv/Languages.js","components/page/MainCV.js","components/cv/Hobbies.js","components/main/cv/tech/right/TechStack.js","components/main/cv/tech/right/InnerExperiences.js","components/main/cv/tech/right/ExperienceLinks.js","components/main/cv/tech/right/ExperienceEntry.js","components/main/cv/tech/right/ExperienceList.js","components/main/cv/tech/right/TableOfContent.js","components/main/cv/tech/right/Experience.js","components/page/TechCV.js","components/page/Home.js","components/index.js","index.js"],"names":["exp01","id","name","city","dates","start","Date","end","description","responsibility","techStack","language","frameworks","prod_env","build_tool","ci_cd","storage","vcs","metrics","exp02","achievements","currentState","exp03","exp04","prettyPeriod","endStr","startStr","dateFormat","months","diffMonth","years","Math","floor","ceil","monthsSuffix","yearsSuffix","periodStr","durationStr","first_working_day","info","level","about_me","firstDay","yearsOfExp","education","degree","subject","paper","location","contacts","important","link","current_skills","value","experiences","inner","linkToExpFn","url","target","links","LoopMe","excess","__p24ukraine","showDates","__p24georgia","__p24abank","P24","Header","About","content","map","line","index","key","Link","href","rel","Contacts","style","marginLeft","props","i","Views","Item","exp","getFullYear","Education","e","Skill","Array","isArray","reduce","a","b","Skills","Table","skills","s","Photo","alignSelf","padding","src","alt","width","ShortTechStack","t","_toString","o","length","filter","w","ShortExpItem","n","ShortExpList","newExp","BigExpList","ExpList","short","Languages","word0","word1","Line","children","Row","Col","xs","MainCV","React","useEffect","document","title","Hobbies","TextBlock","TechStack","expIndex","random","InnerExperiences","indexSuffix","innerExp","experience","ExperienceLinks","text","text_item","ExperienceEntry","margin","ExperienceList","TableOfContent","mapperFn","period","color","exps","listStyle","Experience","marginTop","TechCV","className","Home","to","Navigation","Navbar","bg","variant","Brand","as","Toggle","aria-controls","Nav","NavDropdown","Divider","Routers","Container","fluid","exact","path","component","HomePage","TechCVPage","MainCVPage","App","render","getElementById"],"mappings":"sQAAMA,EAAQ,WACV,MAAO,CACHC,GAAI,kCACJC,KAAM,sCACNC,KAAM,kBACNC,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/BE,YAAa,GAGbC,eAAgB,CAAC,yKAMjBC,UAAW,CACPC,SAAU,4BACVC,WAAY,kCACZC,SAAU,yCACVC,WAAY,YACZC,MAAO,YACPC,QAAS,CACL,aACA,QACA,iBAEJC,IAAK,eACLC,QAAS,CACL,WACA,oBAMVC,EAAQ,WACV,MAAO,CACHlB,GAAI,kCACJC,KAAM,2CACNC,KAAM,kBACNC,MAAO,CACHC,MAAOL,IAAQI,MAAMG,IACrBA,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/Bc,aAAc,CAAC,uVAOfZ,YAAa,KACba,aAAc,sCACdZ,eAAgB,CAAC,mKAKjBC,UAAW,CACPC,SAAU,oCACVC,WAAY,wBACZC,SAAU,mCACVC,WAAY,wEACZC,MAAO,CACH,mCAAoC,sBAExCC,QAAS,mCACTC,IAAK,eACLC,QAAS,uCAKfI,EAAQ,WACV,MAAO,CACHrB,GAAI,kCACJC,KAAM,mCACNC,KAAM,kBACNC,MAAO,CACHC,MAAOc,IAAQf,MAAMG,IACrBA,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/BE,YAAa,KACbC,eAAe,iKAIfC,UAAW,CACPC,SAAU,SACVC,WAAY,yDACZC,SAAU,qBACVC,WAAY,aACZC,MAAO,UACPC,QAAS,8CACTC,IAAK,eACLC,QAAS,4BAKfK,EAAQ,WACV,MAAO,CACHtB,GAAI,kCACJC,KAAM,sCACNC,KAAM,kBACNC,MAAO,CACHC,MAAOiB,IAAQlB,MAAMG,IACrBA,IAAK,IAAID,KAAK,KAAM,GAAQ,IAEhCc,aAAc,CAAC,4SAAD,uJAYdX,eAAe,uXAOfC,UAAW,CACPC,SAAU,4DACVC,WAAY,+EACZC,SAAU,qBACVC,WAAY,uBACZC,MAAO,kDACPC,QAAS,gDACTC,IAAK,eACLC,QAAS,yC,gBCjIRM,EAAe,SAAC,GAAoB,IAEzCC,EAFuBpB,EAAiB,EAAjBA,MAAOE,EAAU,EAAVA,IAC9BmB,EAAWC,YAAWtB,EAAO,aAE5BE,EAIDkB,EAASE,YAAWpB,EAAK,cAHzBA,EAAM,IAAID,KACVmB,EAAS,WAIb,IAAIG,EAASC,YAAUtB,EAAKF,GAAS,EACjCyB,EAAQC,KAAKC,MAAMJ,EAAS,IAChCA,EAASG,KAAKE,KAAKL,EAAkB,GAARE,GAE7B,IAAII,EAAY,eAAcN,EAAS,EAAK,IAAM,IAC9CO,EAAW,cAAaL,EAAQ,EAAK,IAAM,IAC3CM,EAAS,UAAOV,EAAP,cAAuBD,GAChCY,EAAc,GAMlB,OALIP,EAAQ,IACRO,EAAW,UAAOP,EAAP,YAAkBK,EAAlB,MAEfE,EAAW,UAAOA,GAAP,OAAuBT,EAAvB,YAAmCM,GAExC,GAAN,OAAWE,EAAX,aAA2BC,EAA3B,MCvBEC,EAAoB,IAAIhC,KAAK,KAAM,EAAG,IAE/BiC,EAAO,CAChBD,kBAAmBA,EACnB3B,SAAU,CACN,CACIT,KAAM,UACNsC,MAAO,gBAEX,CACItC,KAAM,YACNsC,MAAO,UAEX,CACItC,KAAM,UACNsC,MAAO,WAGfC,SAAU,CAAC,qBAAD,ODtBY,SAACC,GACvB,IAAMZ,EAASC,KAAKC,MAAMH,YAAU,IAAIvB,KAAQoC,GAAY,IAC5D,MAAM,GAAN,OAAWZ,EAAX,KCqByBa,CAAWL,GAD1B,mHAMDM,EAAY,CACrB,CACI1C,KAAM,iDACN2C,OAAQ,CACJ3C,KAAM,SACN4C,QAAS,mBACTC,MAAO,MAEXC,SAAU,kBACV5C,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,MAK1B2C,EAAW,CACpB,CAAEC,WAAW,EAAMhD,KAAM,uBAAwBiD,KAAM,+BACvD,CAAED,WAAW,EAAMhD,KAAM,oBAAqBiD,KAAM,iBACpD,CAAED,WAAW,EAAMhD,KAAM,WAAYiD,KAAM,kDAC3C,CAAED,WAAW,EAAMhD,KAAM,SAAUiD,KAAM,oCAEzC,CAAED,WAAW,EAAOhD,KAAM,WAAYiD,KAAM,wBAC5C,CAAED,WAAW,EAAOhD,KAAM,UAAWiD,KAAM,+BAC3C,CAAED,WAAW,EAAOhD,KAAM,WAAYiD,KAAM,6CAC5C,CAAED,WAAW,EAAOhD,KAAM,WAAYiD,KAAM,wCAGnCC,EC5DD,CACJ,CACIlD,KAAM,YACNmD,MAAO,CACH,qBACA,yCACA,SACA,gBACA,aACA,0CAGR,CACInD,KAAM,aACNmD,MAAO,CACH,2BACA,6CACA,OACA,YAGR,CACInD,KAAM,KACNmD,MAAO,CACH,uCACA,SACA,YAGR,CACInD,KAAM,aACNmD,MAAO,CACH,QACA,aACA,YACA,UAGR,CACInD,KAAM,QACNmD,MAAO,CACH,SACA,iBACA,YAGR,CACInD,KAAM,WACNmD,MAAO,CACH,aACA,iBAGR,CACInD,KAAM,SACNmD,MAAO,CACH,4CACA,oBDqDHC,EAAc,CA/Cf,CACJrD,GAAI,gBACJC,KAAM,gDACNC,KAAM,gBACNK,YAAa,CAAC,yLAIdY,aAAc,CAAC,gIAIfhB,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,IAEjCG,eAAgB,GAChBC,UAAW,CACPC,SAAU,CACN,UACA,yBACA,aACA,cAEJC,WAAY,CACR,cACA,WACA,OACA,YAEJC,SAAU,CACN,2DACA,eACA,yCAEJC,WAAY,CAAC,aACbC,MAAO,CACH,UAAW,UAEfC,QAAS,CAAC,aAAc,SACxBC,IAAK,CACD,UAEJC,QAAS,0CEzGV,CACHjB,GAAI,4BACJC,KAAM,4BACNC,KAAM,gBACNC,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,GAAQ,KAEhCE,YAAa,CAAC,8NAMdC,eAAgB,CAAC,iKAAD,6cAahBW,aAAc,CAAC,4JAAD,mhBAedV,UAAW,CACPC,SAAU,SACVG,WAAY,qBACZC,MAAO,UAIPE,IAAK,gCCjDN,CACHhB,GAAI,qCACJC,KAAM,qCACNC,KAAM,gBACNC,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,GAAQ,GAC9BC,IAAK,IAAID,KAAK,KAAM,EAAO,KAE/BE,YAAa,CAAC,qNAKdC,eAAgB,CAAC,2FAGjBC,UAAW,CACPC,SAAU,SAEVE,SAAU,UACVC,WAAY,eACZC,MAAO,uCAGPE,IAAK,iBLuHE,WACf,IAAMsC,EAAQ,CACVvD,IACAmB,IACAG,IACAC,KAGEiC,EAAc,SAAC,GAAkB,IAAhBtD,EAAe,EAAfA,KAAMD,EAAS,EAATA,GACzB,MAAO,CACHC,KAAK,OAAD,OAASA,GACbuD,IAAI,IAAD,OAAMxD,GACTyD,OAAQ,UAIhB,MAAO,CACHzD,GAAI,8BACJC,KAAM,8BACNC,KAAM,kBACNwD,MAAO,CACH,CACIzD,KAAM,aACNuD,IAAK,sBAETD,EAAYxD,KACZwD,EAAYrC,KACZqC,EAAYlC,KACZkC,EAAYjC,MAEhBnB,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,EAAQ,KAEhCE,YAAa,CAAC,gWAAD,4WAabC,eAAgB,CAAC,mKAAD,2XAehBW,aAAc,KACdC,aAAc,KACdkC,MAAOA,GE7FXK,GIlHO,CACH3D,GAAI,8BACJ4D,QAAQ,EACRF,MAAO,CACH,CACIzD,KAAM,aACNuD,IAAK,0BAET,CACIvD,KAAM,kCACNuD,IAAK,+BACLC,OAAQ,UAGhBxD,KAAK,0DAGLM,YAAY,2KAIZL,KAAM,kBACNC,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,GAAQ,KCxB7B,CACHJ,KAAM,8CACNC,KAAM,kBACNC,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,GAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,KAE/BE,YAAa,CACT,+EAEJE,UAAW,CACPC,SAAU,CAAC,2BAA4B,cACvCC,WAAY,CAAC,WAAY,SAAU,aACnCE,WAAY,CAAC,gBACbC,MAAO,CAAC,WACRC,QAAS,CAAC,aAAc,SACxBC,IAAK,CAAC,YACNC,QAAS,IAEbT,eAAgB,ICoEL,WAEf,IAAMqD,EAzFC,CACH7D,GAAI,mBACJC,KAAM,mBACN6D,WAAW,EACX3D,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,IAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/BH,KAAM,kBACNK,YAAa,CACT,IAEJC,eAAgB,CACZ,4EAEJC,UAAW,CACPC,SAAU,CAAC,SAAU,cACrBC,WAAY,CAAC,uBAAwB,SAAU,YAC/CE,WAAY,CAAC,cACbC,MAAO,CAAC,WACRC,QAAS,CAAC,SAAU,QAAS,YAC7BC,IAAK,CAAC,gBAqER+C,EA/DC,CACH/D,GAAI,mBACJC,KAAM,mBACN6D,WAAW,EACX3D,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,IAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/BH,KAAM,kBACNiB,aAAc,CAAC,kOAAD,gPASdX,eAAgB,CAAC,8GAGjBD,YAAa,GACbE,UAAW,CACPC,SAAU,CAAC,SAAU,cACrBC,WAAY,CAAC,uBAAwB,SAAU,WAAY,UAC3DE,WAAY,wDACZC,MAAO,CAAC,WACRC,QAAS,CAAC,SAAU,QAAS,YAC7BC,IAAK,CAAC,aAAc,kBAoCtBgD,EA9BC,CACHhE,GAAI,kBACJC,KAAM,kBACN6D,WAAW,EACX3D,MAAO,CACHC,MAAO,IAAIC,KAAK,KAAM,EAAO,IAC7BC,IAAK,IAAID,KAAK,KAAM,EAAO,IAE/BH,KAAM,kBACNM,eAAgB,CAAC,8GAGjBD,YAAa,GACbE,UAAW,CACPC,SAAU,CAAC,sBACXC,WAAY,CAAC,yBACbC,SAAU,CAAC,UACXC,WAAY,CAAC,8BACbC,MAAO,CAAC,WACRC,QAAS,CAAC,2BACVC,IAAK,CAAC,cACNC,QAAS,KAWjB,MAAO,CACHjB,GAAI,wCACJC,KAAM,8CACNyD,MAAO,CACH,CAAEzD,KAAM,gBAAiBuD,IAAK,yBAC9B,CAAEvD,KAAM,cAAeuD,IAAK,wBAEhCjD,YAAa,CACT,mFAEJC,eAAgB,CAAC,4KAIjBN,KAAM,kBACNC,MAAO,CACHC,MAAOyD,EAAa1D,MAAMC,MAC1BE,IAAKyD,EAAa5D,MAAMG,KAE5BG,UAAW,CACPC,SAAU,CAAC,2BAA4B,cACvCC,WAAY,CAAC,UAAW,MAAO,WAAY,SAAU,aACrDE,WAAY,CAAC,aAAc,gBAC3BC,MAAO,CAAC,WACRC,QAAS,CAAC,SAAU,QAAS,YAC7BC,IAAK,CAAC,aAAc,UACpBC,QAAS,CAAC,WAEdqC,MAAO,CACHO,EACAE,EACAC,INPRC,IOnHSC,EAAS,WAElB,OACI,6BACI,gDACA,wDCLCC,EAAQ,WAEjB,IAAMC,EAAU9B,EAAKE,SAAS6B,KAAI,SAACC,EAAMC,GAAP,OAC9B,uBAAGC,IAAKD,GAAQD,MAGpB,OACI,6BACI,wBAAItE,GAAG,YAAP,YACCoE,ICTPK,EAAO,SAAC,GAAoB,IAAlBvB,EAAiB,EAAjBA,KAAMjD,EAAW,EAAXA,KAElB,OACI,4BACI,uBAAGyE,KAAMxB,EAAMyB,IAAI,sBAAsBlB,OAAO,UAAUxD,KAKzD2E,EAAW,WAEpB,OACI,6BACI,wCACA,wBAAIC,MAAO,CAAEC,WAAY,UACpB9B,EAASqB,KAAI,SAACU,EAAOC,GAElB,OAAwB,IAApBD,EAAM9B,UACC,qCAGH,kBAAC,EAAD,eAAMuB,IAAKQ,GAAOD,UCtBjCE,EAAQ,WACjB,OACI,6BACI,qDACA,uHCHNC,EAAO,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAENlF,EAA+BkF,EAA/BlF,KAAM2C,EAAyBuC,EAAzBvC,OAAQzC,EAAiBgF,EAAjBhF,MAAO2C,EAAUqC,EAAVrC,MAEnB1C,EAAeD,EAAfC,MAAOE,EAAQH,EAARG,IAEf,OACI,4BACI,gCAASL,GACT,6BAAMG,EAAMgF,cAAZ,MAA8B9E,EAAI8E,eACjCxC,EACM,wCAAcA,EAAO3C,KAArB,KAA6B2C,EAAOC,SACpC,qCACNC,EACM,uCAAaA,GACb,uCAKNuC,EAAY,WAErB,OACI,6BACI,yCACA,4BACK1C,EAAU0B,KAAI,SAACiB,EAAGf,GAAJ,OAAc,kBAAC,EAAD,CAAMC,IAAKD,EAAOY,IAAKG,U,QCzB9DC,EAAQ,SAAC,GAAqB,IAAnBtF,EAAkB,EAAlBA,KAAMmD,EAAY,EAAZA,MAKnB,OAHKoC,MAAMC,QAAQrC,KACfA,EAAQ,CAAEA,IAGV,4BACI,4BAAI,2BAAKnD,IACT,4BAAMmD,EAAMsC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAI,KAAOC,QAKvCC,EAAS,WAElB,OACI,6BACI,6CACA,kBAACC,EAAA,EAAD,KACI,+BACEC,EAAO1B,KAAI,SAAC2B,EAAGhB,GAAJ,OAAU,kBAAC,EAAD,eAAOR,IAAMQ,GAASgB,WCtBhDC,EAAQ,WACjB,OACI,yBAAKpB,MAAO,CACRqB,UAAW,SACXC,QAAS,SAET,yBAAKC,IAAK,oBACNC,IAAI,UACJxB,MAAO,CACHyB,MAAO,Y,QCPrBC,EAAiB,SAAC,GAAW,IAATC,EAAQ,EAARA,EAEtB,IAAKA,EACD,OAAQ,qCAGZ,IAAMC,EAAY,SAACC,GACf,OAAKA,GAIAlB,MAAMC,QAAQiB,KACfA,EAAI,CAAEA,IAGNA,EAAEC,OAAS,EACJD,EAAEE,QAAO,SAACC,GAAD,OAAOA,EAAEF,OAAS,KAC7BjB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAI,KAAOC,KAG9B,IAZI,IAeTlF,EAAW+F,EAAUD,EAAE9F,UACvBC,EAAa8F,EAAUD,EAAE7F,YACzBI,EAAU0F,EAAUD,EAAEzF,SAEtBqD,EAAUqC,EAAU,CAAE/F,EAAUC,EAAYI,IAElD,OACI,6BACI,2BACI,0CADJ,IACyBqD,KAM/B0C,EAAe,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,EAAG9G,EAA8C,EAA9CA,KAAMD,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,MAAOI,EAA6B,EAA7BA,YAAaE,EAAgB,EAAhBA,UAErD,OACI,6BACI,6BACA,wBAAIT,GAAKA,GAAO+G,EAAhB,KAAuB9G,EAAvB,KAAiCsB,EAAapB,GAA9C,KACA,2BACMI,GAEN,kBAAC,EAAD,CAAgBiG,EAAI/F,MAK1BuG,EAAe,WACjB,OACI,6BACM3D,EAAYgB,KAAI,SAACc,EAAKH,GAEpB,GAAIG,EAAIvB,OACJ,OAAO,qCAGX,IAAIqD,EAAM,2BAAQ9B,GAAR,IAAa4B,EAAI/B,EAAI,IAC/B,OACI,kBAAC,EAAD,eAAcR,IAAMQ,GAASiC,SAO3CC,EAAa,WACf,OACI,6BACI,yCAKCC,EAAU,SAAC,GAAsB,IAAD,IAAnBC,aAAmB,SACzC,OACI,6BACI,0CACEA,EAAQ,kBAAC,EAAD,MAAmB,kBAAC,EAAD,QCnF5BC,EAAY,WAErB,IAAIjD,EAAU9B,EAAK5B,SACd2D,KAAI,gBAAGpE,EAAH,EAAGA,KAAMsC,EAAT,EAASA,MAAT,gBAA0BtC,EAA1B,aAAqCsC,EAArC,QACJmD,QAAO,SAAC4B,EAAOC,GAAR,gBAAuBD,EAAvB,aAAmCC,MAE/C,OACI,6BACI,yCACA,2BACMnD,KCDZoD,EAAO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACZ,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAK,IACJH,KAMLI,EAAS,WAMlB,OAJAC,IAAMC,WAAU,WACZC,SAASC,MAAT,0BAIA,6BACI,gCACI,kBAAC,EAAD,KAAM,kBAAC,EAAD,QAEV,8BACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAK,GACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,OACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,OACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,OACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,QAEV,kBAACD,EAAA,EAAD,CAAKC,GAAK,GACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,SAGd,kBAAC,EAAD,KAAM,kBAAC,EAAD,OACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,OACN,kBAAC,EAAD,KAAM,kBAAC,EAAD,CAASR,OAAQ,MAE3B,mCC/CCc,EAAU,WACnB,OACI,6BACI,uCACA,sFCHNC,EAAY,SAAC,EAAoB5D,GAAW,IAA7B0D,EAA4B,EAA5BA,MAAO7D,EAAqB,EAArBA,QAExB,OAAIA,GAAYoB,MAAMC,QAAQrB,IAAYA,EAAQuC,OAAS,GAClDnB,MAAMC,QAAQrB,KACfA,EAAU,CAACA,IAGXA,EAAQuC,QAAU,EACX,sCAGXvC,EAAUA,EAAQsB,QAAO,SAACC,EAAGC,GAAJ,gBAAaD,EAAb,aAAmBC,MAIxC,wBAAIpB,IAAKD,GACL,4BACI,2BAAI0D,GADR,KAGA,4BAAK7D,MAIV,MAGEgE,EAAY,SAAC,GAA6B,IAA3B3H,EAA0B,EAA1BA,UAA0B,EAAf4H,SACnC,OAAI5H,EAEI,6BACI,qDACA,kBAACqF,EAAA,EAAD,CAAO9F,GAAE,UAAK8B,KAAKwG,WACf,+BACI,kBAAC,EAAD,CAAWL,MAAM,WAAW7D,QAAS3D,EAAUC,WAC/C,kBAAC,EAAD,CAAWuH,MAAM,oBAAwB7D,QAAS3D,EAAUE,aAC5D,kBAAC,EAAD,CAAWsH,MAAM,iBAAiB7D,QAAS3D,EAAUG,WACrD,kBAAC,EAAD,CAAWqH,MAAM,aAAa7D,QAAS3D,EAAUI,aACjD,kBAAC,EAAD,CAAWoH,MAAM,QAAQ7D,QAAS3D,EAAUK,QAC5C,kBAAC,EAAD,CAAWmH,MAAM,UAAU7D,QAAS3D,EAAUM,UAC9C,kBAAC,EAAD,CAAWkH,MAAM,MAAM7D,QAAS3D,EAAUO,MAC1C,kBAAC,EAAD,CAAWiH,MAAM,iBAAiB7D,QAAS3D,EAAUQ,aAMlE,MC9CEsH,EAAmB,SAAC,GAAkC,IAAhClF,EAA+B,EAA/BA,YAAamF,EAAkB,EAAlBA,YAE5C,GAAInF,EAAa,CAEb,IAAMoF,EAAWpF,EAAYgB,KAAI,SAACqE,EAAYnE,GAE1C,OADAA,GAAgB,EAEZ,kBAAC,GAAD,CACIC,IAAKD,EACLA,MAAOA,EACPiE,YAAaA,EACbE,WAAYA,OAIxB,OAAO,6BAAMD,GAEjB,OAAO,MClBLhE,EAAO,SAAC,GAAsC,IAApCxE,EAAmC,EAAnCA,KAAMuD,EAA6B,EAA7BA,IAA6B,IAAxBC,cAAwB,MAAf,SAAe,EAC/C,OACI,4BACI,uBAAGiB,KAAMlB,EAAKC,OAAQA,GAASxD,GAAcuD,KAK5CmF,EAAkB,SAAC,GAAe,IAAbjF,EAAY,EAAZA,MAE9B,OAAKA,EAID,6BACI,qCACA,4BACKA,EAAMW,KAAI,SAACnB,EAAMqB,GAAP,OAAkB,kBAAC,EAAD,eAAMC,IAAKD,GAAWrB,SANnD,sCCPViF,EAAY,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,MAAOW,EAAW,EAAXA,KACxB,OAAY,MAARA,GAAiBpD,MAAMC,QAAQmD,IAASA,EAAKjC,OAAS,GACjDnB,MAAMC,QAAQmD,KACfA,EAAO,CAACA,IACZA,EAAOA,EAAKvE,KAAI,SAACwE,EAAW7D,GAAZ,OAAkB,uBAAGR,IAAKQ,GAAI6D,MAE1C,6BACI,4BAAKZ,GACL,6BAAMW,KAIX,MAGEE,GAAkB,SAAC,GAA6C,IAA/B3D,EAA8B,EAA1CuD,WAAiBF,EAAyB,EAAzBA,YAAajE,EAAY,EAAZA,MAExDiE,IACAjE,EAAQiE,EAAc,IAAMjE,GAEhC,IAAMvE,EAAMmF,EAAInF,GAAMmF,EAAInF,GAAM,GAAK8B,KAAKwG,SACpCL,EAAK,UAAM1D,EAAN,aAAgBY,EAAIlF,KAApB,aAA6BkF,EAAIjF,KAAjC,aAA0CqB,EAAa4D,EAAIhF,OAA3D,KAEX,OACI,6BACI,wBAAI0E,MAAO,CAAEkE,OAAQ,YACrB,wBAAI/I,GAAIA,GAAKiI,GACb,kBAAC,EAAD,CAAWA,MAAM,cAAcW,KAAMzD,EAAI5E,cACzC,kBAAC,EAAD,CAAW0H,MAAM,iBAAiBW,KAAMzD,EAAI3E,iBAC5C,kBAAC,EAAD,CAAWyH,MAAM,eAAeW,KAAMzD,EAAIhE,eAC1C,kBAAC,EAAD,CAAW8G,MAAM,gBAAgBW,KAAMzD,EAAI/D,eAC3C,kBAAC,EAAD,CAAWiH,SAAU9D,EAAO9D,UAAW0E,EAAI1E,YAC3C,kBAAC,EAAD,CAAiBiD,MAAOyB,EAAIzB,QAC5B,kBAAC,EAAD,CAAkBL,YAAa8B,EAAI7B,MAAOkF,YAAajE,MCnCtDyE,GAAiB,WAE1B,IAAM5E,EAAUf,EAAYgB,KAAI,SAACqE,EAAY1D,GAAb,OAC5B,kBAAC,GAAD,CAAiBR,IAAKQ,EAAGT,MAAOS,EAAI,EAAG0D,WAAYA,OAGvD,OACI,6BAAMtE,ICPD6E,GAAiB,WAE1B,IAAMC,EAAW,SAAC/D,EAAKZ,GAAW,IAG1B4E,EAFIlJ,EAAsCkF,EAAtClF,KAAMD,EAAgCmF,EAAhCnF,GAAIG,EAA4BgF,EAA5BhF,MAAO2D,EAAqBqB,EAArBrB,UAAWR,EAAU6B,EAAV7B,MAYpC,OARoB,IAAdQ,IACFqF,EACI,0BAAMtE,MAAO,CAAEuE,MAAO,SAAtB,YACU7H,EAAapB,GADvB,OAOJ,wBAAIqE,IAAKD,GACL,0BAAMM,MAAO,CAAEuE,MAAO,SAClB,uBAAG1E,KAAM,IAAM1E,GAAf,UAAuBuE,EAAQ,EAA/B,aAAqCtE,IACpCkJ,GAEJ7F,GAASc,EAAQ,CAAEiF,KAAM/F,MAKhCc,EAAU,SAAC,GAAc,IAAZiF,EAAW,EAAXA,KACf,OACI,wBAAIxE,MAAO,CAAEyE,UAAW,SACnBD,EAAKhF,IAAI6E,KAKtB,OACI,6BACI,iDACC9E,EAAQ,CAAEiF,KAAMhG,MCrChBkG,GAAa,WACtB,OACI,6BACI,wBAAI1E,MAAO,CAAE2E,UAAW,QAAxB,cACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCECC,GAAS,WAMlB,OAJA3B,IAAMC,WAAU,WACZC,SAASC,MAAT,0BAIA,6BACI,gCACI,kBAACP,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,SAIZ,8BACI,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAG8B,UAAU,WAClB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,kBAAC/B,EAAA,EAAD,CAAKC,GAAI,IACL,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,QAGR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,EAAD,QAGR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,GAAD,WAMpB,mCClDC+B,GAAO,WAMhB,OAJA7B,IAAMC,WAAU,WACZC,SAASC,MAAQ,UAIjB,6BACI,yCACA,kBAAC,IAAD,CAAM2B,GAAG,WAAWF,UAAU,YAA9B,YACA,kBAAC,IAAD,CAAME,GAAG,WAAWF,UAAU,YAA9B,kBCLNG,GAAa,WACf,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QAGtB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,GAAIzF,IAAMmF,GAAG,KAA3B,oBACA,kBAACE,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAE7B,kBAACC,EAAA,EAAD,CAAKX,UAAU,WACX,kBAACY,EAAA,EAAD,CAAarC,MAAM,KAAKjI,GAAG,sBAEvB,kBAACsK,EAAA,EAAYpF,KAAb,CAAkBgF,GAAIzF,IAAMmF,GAAG,YAA/B,WACA,kBAACU,EAAA,EAAYC,QAAb,MACA,kBAACD,EAAA,EAAYpF,KAAb,CAAkBgF,GAAIzF,IAAMmF,GAAG,YAA/B,oBAQdY,GAAU,WACZ,OACI,kBAACC,EAAA,EAAD,CAAWC,MAAM,KAAKhB,UAAU,kBAE5B,kBAAC,IAAD,CAAOiB,OAAO,EAAMC,KAAK,IAAIC,UAAWC,KACxC,kBAAC,IAAD,CAAOH,OAAO,EAAMC,KAAK,WAAWC,UAAWE,KAC/C,kBAAC,IAAD,CAAOJ,OAAO,EAAMC,KAAK,WAAWC,UAAWG,MAM9CC,GAAM,WAEf,OACI,kBAAC,IAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,MCrCZC,iBAAO,kBAAC,GAAD,MAASlD,SAASmD,eAAe,W","file":"static/js/main.c3e63cc2.chunk.js","sourcesContent":["const exp01 = () => {\n    return {\n        id: 'software_engineer_at_loopme_001',\n        name: \"Clojure Developer in Ad Server Team\",\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: new Date(2014, 7 - 1, 1),\n            end: new Date(2015, 2 - 1, 1)\n        },\n        description: [\n\n        ],\n        responsibility: [\n            `\n            Migration from Ruby to Clojure, new features, develop fast solution for ad targeting\n            (choosing best ad from big list of ads)\n            `\n        ],\n        techStack: {\n            language: \"Clojure (based on Java 8)\",\n            frameworks: \"many Clojure specific libraries\",\n            prod_env: \"Bare-Metal Servers provisioned by Chef\",\n            build_tool: \"Leiningen\",\n            ci_cd: \"Travis CI\",\n            storage: [\n                \"PostgreSQL\",\n                \"Redis\",\n                \"Elasticsearch\"\n            ],\n            vcs: \"Git (Github)\",\n            metrics: [\n                \"NewRelic\",\n                \"Elasticsearch\"\n            ]\n        }\n    }\n}\n\nconst exp02 = () => {\n    return {\n        id: 'software_engineer_at_loopme_002',\n        name: \"Clojure/Java Developer in Ad Server Team\",\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: exp01().dates.end,\n            end: new Date(2016, 3 - 1, 1)\n        },\n        achievements: [\n            `\n            I had to implement a very difficult task between 2 languages. \n            It had to be easy if another team helped. But the idea was on PoC stage. \n            I had to do it by myself. I did it successfully and I got \"Company Hero\" award and £100. \n            This award is given once every six months.\n            `],\n        description: null,\n        currentState: \"Migrated from Clojure to Java fully\",\n        responsibility: [\n            `\n            Develop high-load ad-server, ad targeting, api’s for real time bidding platforms,\n            migration from Clojure to Java.\n            `],\n        techStack: {\n            language: \"Java 8, Clojure (based on Java 8)\",\n            frameworks: \"Spring Boot, Spring 4\",\n            prod_env: \"Chef + (Apache Mesos + Marathon)\",\n            build_tool: \"Leiningen (for Clojure Projects), Apache Maven 3+ (for Java Projects)\",\n            ci_cd: [\n                \"Travis CI (for Ruby and Clojure)\", \"Jenkins (for Java)\"\n            ],\n            storage: \"PostgreSQL, Redis, Elasticsearch\",\n            vcs: \"Git (Github)\",\n            metrics: \"Datadog → Grafana + InfluxDB\"\n        }\n    }\n}\n\nconst exp03 = () => {\n    return {\n        id: 'software_engineer_at_loopme_003',\n        name: \"Java Developer in Ad Server Team\",\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: exp02().dates.end,\n            end: new Date(2016, 9 - 1, 1)\n        },\n        description: null,\n        responsibility: `\n            Develop high-load ad-server, ad targeting, api’s for real time bidding platforms,\n            api’s for front-end team.\n            `,\n        techStack: {\n            language: \"Java 8\",\n            frameworks: \"Spring Boot, Spring 4, RxJava, gRPC (netty + protobuf)\",\n            prod_env: \"Docker, Kubernetes\",\n            build_tool: \"Gradle 4.8\",\n            ci_cd: \"Jenkins\",\n            storage: \"Kafka, Cassandra, PostgreSQL, Elasticsearch\",\n            vcs: \"Git (Github)\",\n            metrics: \"Grafana → Datadog\"\n        }\n    }\n}\n\nconst exp04 = () => {\n    return {\n        id: 'software_engineer_at_loopme_004',\n        name: \"Java Developer in Data Science Team\",\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: exp03().dates.end,\n            end: new Date(2018, 11 - 1, 1)\n        },\n        achievements: [\n            `\n            I’ve been working for Data Science team for about 2 years.\n            As a result, I created high-performance java applications by using\n            a small number of design patterns and different data structures\n            with response ~1ms (99 percentile).\n            `,\n            `\n            I didn't use a lot of frameworks\n            and libraries, and it helped with future migrations on new java versions.\n            `\n        ],\n        responsibility: `\n            Develop high-performance high-load applications\n            for Data Science team, implement data science algorithms and adopt it for runtime,\n            deliver prediction and bidding models to production,\n            implement custom transport solutions for big prediction models,\n            benchmarking, data structures investigation.\n            `,\n        techStack: {\n            language: \"Java 8, 9, 10, 11 (currently preparing migration to 12ea)\",\n            frameworks: \"Mostly Just Java, Spring Boot 2, Spring 5, RxJava 2, gRPC (netty + protobuf)\",\n            prod_env: \"Docker, Kubernetes\",\n            build_tool: \"Gradle 4.8.1, 4.10.2\",\n            ci_cd: \"Jenkins (pipelines + Docker Multi-Stage builds)\",\n            storage: \"Kafka, Cassandra, PostgreSQL, Elasticsearch 6\",\n            vcs: \"Git (Github)\",\n            metrics: \"Datadog → Prometheus + Grafana\"\n        }\n    }\n}\n\nexport const exp = () => {\n    const inner = [\n        exp01(),\n        exp02(),\n        exp03(),\n        exp04()\n    ]\n\n    const linkToExpFn = ({ name, id }) => {\n        return {\n            name: `CV: ${name}`,\n            url: `#${id}`,\n            target: \"_self\"\n        }\n    }\n\n    return {\n        id: 'software_engineer_at_loopme',\n        name: \"Software Engineer at LoopMe\",\n        city: \"Dnipro, Ukraine\",\n        links: [\n            {\n                name: \"LoopMe.com\",\n                url: \"https://loopme.com\"\n            },\n            linkToExpFn(exp01()),\n            linkToExpFn(exp02()),\n            linkToExpFn(exp03()),\n            linkToExpFn(exp04())\n        ],\n        dates: {\n            start: new Date(2014, 7 - 1, 1),\n            end: new Date(2018, 10 - 1, 30)\n        },\n        description: [\n            `\n            LoopMe's full-stack tech platform harnesses mobile data, \n            using a powerful combination of attribution, Artificial Intelligence, \n            and analytics to deliver outstanding campaign performance against \n            brand outcomes — consideration, purchase intent, foot traffic, and offline sales.\n            `, `\n            The company was founded by experienced mobile advertising executives \n            Stephen Upstone (CEO) and Marco Van de Bergh (CTO) in 2012. \n            LoopMe has global offices in London, New York, Dnipro, Chicago, LA, \n            Atlanta, Boston, Dallas, Detroit, San Francisco, Singapore, Beijing, Dubai, and Johannesburg.\n            `\n        ],\n        responsibility: [\n            `\n            My responsibility was in developing backend Clojure/Java Applications\n            (APIs) for the front end team and other clients. \n            `,\n            `\n            The major task was to develop a fault tolerance application \n            that should handle big amount of traffic and store it to a database.\n            `,\n            `\n            For a better understanding of what I was doing, \n            I split the description of my experience \n            in LoopMe into 4 parts (periods) that you can find below.\n            `\n        ],\n        achievements: null,\n        currentState: null,\n        inner: inner\n    }\n}\n","import {\n    differenceInCalendarMonths as diffMonth,\n    format as dateFormat\n} from \"date-fns\";\n\nexport const yearsOfExp = (firstDay) => {\n    const years = (Math.floor(diffMonth(new Date(), firstDay) / 12))\n    return `${ years }+`;\n}\n\nexport const prettyPeriod = ({ start, end }) => {\n    let startStr = dateFormat(start, 'MMMM yyyy')\n    let endStr;\n    if (!end) {\n        end = new Date();\n        endStr = \"present\"\n    } else {\n        endStr = dateFormat(end, \"MMMM yyyy\")\n    }\n    let months = diffMonth(end, start) + 1\n    let years = Math.floor(months / 12)\n    months = Math.ceil(months - (years * 12))\n\n    let monthsSuffix = `month${ ((months > 1) ? \"s\" : \"\") }`\n    let yearsSuffix = `year${ ((years > 1) ? \"s\" : \"\") }`\n    let periodStr = `${ startStr } - ${ endStr }`\n    let durationStr = ''\n    if (years > 0) {\n        durationStr = `${ years } ${ yearsSuffix } `\n    }\n    durationStr = `${ durationStr }${ months } ${ monthsSuffix }`\n\n    return `${ periodStr } (${ durationStr })`\n};\n","import * as Nix from './Nix'\nimport * as Intellias from './intellias'\nimport * as LoopMe from './loop_me'\nimport * as Ciklum from './ciklum'\nimport * as BRTP from './privat/BRTP'\nimport * as P24 from './privat/P24'\nimport { CurrentSkills } from './CurrentSkills'\nimport { yearsOfExp } from '../utils/CustomDateUtils'\n\nconst first_working_day = new Date(2012, 2, 28)\n\nexport const info = {\n    first_working_day: first_working_day,\n    language: [\n        {\n            name: \"English\",\n            level: \"Intermediate\"\n        },\n        {\n            name: \"Ukrainian\",\n            level: \"Native\"\n        },\n        {\n            name: \"Russian\",\n            level: \"Fluent\"\n        }\n    ],\n    about_me: [\n        `Software Engineer ${yearsOfExp(first_working_day)} years, mostly Java.`,\n        `Passionate of java, jvm, performance, benchmarking, data structures, reactive streams.`\n    ]\n}\n\nexport const education = [\n    {\n        name: \"Ukrainian State Chemical Technology University\",\n        degree: {\n            name: \"Master\",\n            subject: \"Computer Science\",\n            paper: null,\n        },\n        location: \"Dnipro, Ukraine\",\n        dates: {\n            start: new Date(2006, 9 - 1, 1),\n            end: new Date(2011, 6 - 1, 1)\n        }\n    }\n]\n\nexport const contacts = [\n    { important: true, name: \"gd.mail.89@gmail.com\", link: \"mailto:gd.mail.89@gmail.com\" },\n    { important: true, name: \"Skype ( dier_89 )\", link: \"skype:dier_89\" },\n    { important: true, name: \"LinkedIn\", link: \"https://www.linkedin.com/in/dmitriy-gorkhover/\" },\n    { important: true, name: \"Github\", link: \"https://github.com/DimkaGorhover\" },\n\n    { important: false, name: \"Telegram\", link: \"https://t.me/hdmytro\" },\n    { important: false, name: \"Twitter\", link: \"https://twitter.com/dghover\" },\n    { important: false, name: \"Facebook\", link: \"https://www.facebook.com/dmitriy.gorhover\" },\n    { important: false, name: \"LeetCode\", link: \"https://leetcode.com/dimkagorhover/\" }\n];\n\nexport const current_skills = CurrentSkills()\n\nconst self_employed_exp = () => {\n    return ({\n        id: \"self_employed\",\n        name: \"Self-Employed Full-Stack Engineer (Freelance)\",\n        city: \"Lviv, Ukraine\",\n        description: [\n            `Building k8s Cluster on Bare-Metal using Ansible from scratch, \n            Developing Backend Application for Telegram Bot by using Quarkus Framework + Graal Native Image + Docker`\n        ],\n        achievements: [\n            `Setup k8s Cluster from scratch on VirtualBox (Alpine Linux, CentOS 7, Ubuntu 20.04) \n            by using Ansible Playbooks`\n        ],\n        dates: {\n            start: new Date(2020, 1 - 1, 1),\n        },\n        responsibility: [],\n        techStack: {\n            language: [\n                \"Java 14\",\n                \"GraalVM 20.1 (Java 11)\",\n                \"Python 3.8\",\n                \"JavaScript\"\n            ],\n            frameworks: [\n                \"Spring Boot\",\n                \"RxJava 2\",\n                \"gRPC\",\n                \"React.JS\"\n            ],\n            prod_env: [\n                \"VirtualBox (Alpine Linux 3.11 + CentOS 7 + Ubuntu 20.04)\",\n                \"Ansible 2.9+\",\n                \"Docker Swarm → Kubernetes 1.18.2\"\n            ],\n            build_tool: [\"Gradle 6+\"],\n            ci_cd: [\n                \"Jenkins\", \"Gitlab\"\n            ],\n            storage: [\"PostgreSQL\", \"Redis\"],\n            vcs: [\n                \"Gitlab\"\n            ],\n            metrics: \"Prometheus + Grafana (in progress...)\"\n        }\n    })\n}\n\nexport const experiences = [\n    self_employed_exp(),\n    Nix.exp(),\n    Intellias.exp(),\n    LoopMe.exp(),\n    Ciklum.exp(),\n    BRTP.exp(),\n    P24.exp()\n];\n","export const CurrentSkills = () => {\n    return ([\n        {\n            name: \"Languages\",\n            value: [\n                \"Java (Versions 6+)\",\n                \"Clojure (2 years on prod, 4 years ago)\",\n                \"Python\",\n                \"Go (beginner)\",\n                \"JavaScript\",\n                \"Linux Shell {sh, bash, zsh} (low-mid)\"\n            ]\n        },\n        {\n            name: \"Frameworks\",\n            value: [\n                \"Spring (Boot, Web, etc.)\",\n                \"Reactive Streams (RxJava, Project Reactor)\",\n                \"gRPC\",\n                \"Quarkus\"\n            ]\n        },\n        {\n            name: \"OS\",\n            value: [\n                \"Linux (Ubuntu, Mint, Alpine, CentOS)\",\n                \"Mac OS\",\n                \"Windows\"\n            ]\n        },\n        {\n            name: \"Data Bases\",\n            value: [\n                \"Redis\",\n                \"PostgreSQL\",\n                \"Zookeeper\",\n                \"Kafka\"\n            ]\n        },\n        {\n            name: \"Tools\",\n            value: [\n                \"Docker\",\n                \"Docker-Compose\",\n                \"Ansible\"\n            ]\n        },\n        {\n            name: \"Clusters\",\n            value: [\n                \"Kubernetes\",\n                \"Docker Swarm\"\n            ]\n        },\n        {\n            name: \"Clouds\",\n            value: [\n                \"Google Cloud Platform (user, 2 years ago)\",\n                \"AWS (beginner)\"\n            ]\n        }\n    ])\n}\n","export const exp = () => {\n    return {\n        id: \"software_engineer_at_n_ix\",\n        name: \"Software Engineer at N-IX\",\n        city: \"Lviv, Ukraine\",\n        dates: {\n            start: new Date(2019, 8 - 1, 1),\n            end: new Date(2019, 12 - 1, 31)\n        },\n        description: [\n            `\n            I was working for a company that provides technology and business services for a number \n            of telecommunications companies as well as a variety of other multinational enterprises.\n            `\n        ],\n        responsibility: [\n            `\n            I was a part of the team that worked on implementing \n            a new gateway protocol - SMGP (Short Message Gateway Protocol).\n            `, `\n            It was necessary not only to implement the task but also \n            to cover all possible cases (unit tests), as well as most of the third-party code.\n            `, `\n            After that, I was engaged in fixing security vulnerabilities in the project. \n            To find and check such vulnerabilities i have been using tools \n            like \"fortify-on-demand\" (on production) and SonarQube (on the local subnet).\n            `\n        ],\n        achievements: [\n            `To reduce the time of callback about vulnerabilities fixes \n            we needed to set up SonarQube as close as possible to our subnet. \n            `,\n            `We decided to set up Docker Swarm Cluster on the local Azure Cloud.\n            `,\n            `As the result, I set up Docker Swarm Cluster \n            with Gitlab (mirrored code from Subversion), \n            Jenkins CI (for scheduling SonarQube tasks, \n                and mirroring Subversion repository to Gitlab), \n                and SonarQube (for report about vulnerabilities fixes) by myself.\n                `,\n            `Before this, I wasn't familiar close with devops-like tasks. \n            It was interesting experience for me`\n        ],\n        techStack: {\n            language: \"Java 6\",\n            build_tool: \"Apache Maven 3.3.1\",\n            ci_cd: \"Jenkins\",\n            // frameworks: \"-\",\n            // storage: \"-\",\n            // metrics: \"-\",\n            vcs: \"Subversion (git svn plugin)\"\n        }\n    }\n}\n","export const exp = () => {\n    return {\n        id: \"senior_java_developer_ar_intellias\",\n        name: \"Senior Java Developer ar Intellias\",\n        city: \"Lviv, Ukraine\",\n        dates: {\n            start: new Date(2018, 11 - 1, 1),\n            end: new Date(2019, 3 - 1, 15)\n        },\n        description: [\n            `Implement new algorithms for map matching, \n            Provide comprehensive analysis on different algorithms comparison, \n            Develop and extend map matching pipelines with multi-algorithms support`\n        ],\n        responsibility: [\n            `Implementing new Map Matcher algorithm based on Hidden Markov Model + Algorithm Viterbi`\n        ],\n        techStack: {\n            language: \"Java 8\",\n            // frameworks: \"-\",\n            prod_env: \"unknown\",\n            build_tool: \"Apache Maven\",\n            ci_cd: \"Jenkins (all custom scripts on bash)\",\n            // storage: \"AWS (Hadoop, EMR)\",\n            // metrics: \"-\",\n            vcs: \"Git (Gerrit)\"\n        }\n    }\n}\n","export const exp = () => {\n    return {\n        id: \"software_engineer_at_ciklum\",\n        excess: true,\n        links: [\n            {\n                name: \"Ciklum.com\",\n                url: \"https://www.ciklum.com\"\n            },\n            {\n                name: \"CV: Software Engineer at LoopMe\",\n                url: \"#software_engineer_at_loopme\",\n                target: '_self'\n            }\n        ],\n        name: `\n            Software Engineer at Ciklum\n            `,\n        description: `\n            I’ve been working on LoopMe project when it was Ciklum's outstaff project.\n            More details in \"Software Engineer at LoopMe\".\n            `,\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: new Date(2014, 7 - 1, 1),\n            end: new Date(2015, 11 - 1, 1)\n        }\n    }\n}\n","export const exp = () => {\n    return {\n        name: \"Middle Software/Java Engineer at PrivatBank\",\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: new Date(2013, 7 - 1, 1),\n            end: new Date(2014, 7 - 1, 30)\n        },\n        description: [\n            \"I’ve been developing internal web projects for the business department\"\n        ],\n        techStack: {\n            language: [\"Java (Versions: 6, 7, 8)\", \"JavaScript\"],\n            frameworks: [\"Spring 3\", \"jQuery\", \"Angular 1\"],\n            build_tool: [\"Apache Maven\"],\n            ci_cd: [\"Jenkins\"],\n            storage: [\"PostgreSQL\", \"Redis\"],\n            vcs: [\"Gitolite\"],\n            metrics: []\n        },\n        responsibility: []\n    }\n}\n","const p24ukraine = () => {\n    return {\n        id: \"privat24_ukraine\",\n        name: \"Privat24 Ukraine\",\n        showDates: false,\n        dates: {\n            start: new Date(2012, 2 - 1, 28),\n            end: new Date(2013, 7 - 1, 1)\n        },\n        city: \"Dnipro, Ukraine\",\n        description: [\n            \"\"\n        ],\n        responsibility: [\n            \"New small features, support current features, bugfix, unit testing, etc.\"\n        ],\n        techStack: {\n            language: [\"Java 6\", \"JavaScript\"],\n            frameworks: [\"Java EE (EJB, Resin)\", \"jQuery\", \"Backbone\"],\n            build_tool: [\"Apache Ant\"],\n            ci_cd: [\"Jenkins\"],\n            storage: [\"Sybase\", \"Redis\", \"RabbitMQ\"],\n            vcs: [\"Subversion\"]\n        },\n    }\n}\n\nconst p24georgia = () => {\n    return {\n        id: \"privat24_georgia\",\n        name: \"Privat24 Georgia\",\n        showDates: false,\n        dates: {\n            start: new Date(2012, 2 - 1, 28),\n            end: new Date(2013, 7 - 1, 1)\n        },\n        city: \"Dnipro, Ukraine\",\n        achievements: [`\n            I spend 4 weekends (mostly nights) and migrated this project \n            from an old stack of technology (Java 6 + Apache Ant) \n            to a new one (Java 7 + Spring + Apache Maven + Git).\n            `, `\n            Unfortunately, there weren't mentors to help me. \n            And based on my lack of knowledge it was very stressful for me, \n            but as a result, I got a great experience that I remember nowadays.\n            `],\n        responsibility: [`\n            Develop and support internet banking web application, same as Privat24 Ukraine\n            `],\n        description: \"\",\n        techStack: {\n            language: [\"Java 6\", \"JavaScript\"],\n            frameworks: [\"Java EE (EJB, Resin)\", \"jQuery\", \"Spring 3\", \"jQuery\"],\n            build_tool: \"Netbeans’ Apache Ant scripts → Apache Maven\",\n            ci_cd: [\"Jenkins\"],\n            storage: [\"Sybase\", \"Redis\", \"RabbitMQ\"],\n            vcs: [\"Subversion\", \"Git (Gitlab)\"]\n        },\n    }\n}\n\nconst p24abank = () => {\n    return {\n        id: \"privat24_a_bank\",\n        name: \"Privat24 A-Bank\",\n        showDates: false,\n        dates: {\n            start: new Date(2012, 2 - 1, 28),\n            end: new Date(2013, 7 - 1, 1)\n        },\n        city: \"Dnipro, Ukraine\",\n        responsibility: [`\n            Develop and support internet banking web application, same as Privat24 Ukraine\n            `],\n        description: \"\",\n        techStack: {\n            language: [\"Java 6, JavaScript\"],\n            frameworks: [\"Java EE (EJB), jQuery\"],\n            prod_env: [\"custom\"],\n            build_tool: [\"Netbeans’ Ant scripts\"],\n            ci_cd: [\"Jenkins\"],\n            storage: [\"Sybase, Redis, RabbitMQ\"],\n            vcs: [\"Subversion\"],\n            metrics: []\n        },\n    }\n}\n\nexport const exp = () => {\n\n    const __p24ukraine = p24ukraine();\n    const __p24georgia = p24georgia();\n    const __p24abank = p24abank();\n\n    return {\n        id: \"software_java_engineer_at_privat_bank\",\n        name: \"Junior Software/Java Engineer at PrivatBank\",\n        links: [\n            { name: \"PrivatBank.ua\", url: \"https://privatbank.ua\" },\n            { name: \"Privat24.ua\", url: \"https://privat24.ua\" }\n        ],\n        description: [\n            \"I'd been working for the Ukrainian local internet banking system named Privat24\"\n        ],\n        responsibility: [`\n            Small features (clinet messages counters, form \"don't block credit card abroad\", etc.),\n            support, bugfixing, unit testing, etc.\n            `],\n        city: \"Dnipro, Ukraine\",\n        dates: {\n            start: __p24ukraine.dates.start,\n            end: __p24georgia.dates.end\n        },\n        techStack: {\n            language: [\"Java (Versions: 6, 7, 8)\", \"JavaScript\"],\n            frameworks: [\"Java EE\", \"EJB\", \"Spring 3\", \"jQuery\", \"Angular 1\"],\n            build_tool: [\"Apache Ant\", \"Apache Maven\"],\n            ci_cd: [\"Jenkins\"],\n            storage: [\"Sybase\", \"Redis\", \"RabbitMQ\"],\n            vcs: [\"Subversion\", \"Gitlab\"],\n            metrics: [\"Zabbix\"]\n        },\n        inner: [\n            __p24ukraine,\n            __p24georgia,\n            __p24abank\n        ]\n    }\n}\n","import React from 'react';\nimport { info } from \"../../data/cv_data\";\n\nexport const Header = () => {\n\n    return (\n        <div>\n            <h1>Dmytro Horkhover</h1>\n            <h5>Java Software Engineer</h5>\n        </div>\n    )\n};\n","import React from 'react';\nimport { info } from \"../../data/cv_data\";\n\nexport const About = () => {\n\n    const content = info.about_me.map((line, index) => (\n        <p key={index}>{line}</p>\n    ))\n\n    return (\n        <div>\n            <h4 id=\"about_me\">About Me</h4>\n            {content}\n        </div>\n    )\n};\n","import React from 'react';\nimport { contacts } from \"../../data/cv_data\";\n\nconst Link = ({ link, name }) => {\n\n    return (\n        <li>\n            <a href={link} rel=\"noopener noreferrer\" target=\"_blank\">{name}</a>\n        </li>\n    )\n}\n\nexport const Contacts = () => {\n\n    return (\n        <div>\n            <h4>Contacts</h4>\n            <ul style={{ marginLeft: \"-1rem\" }}>\n                {contacts.map((props, i) => {\n\n                    if (props.important === false) {\n                        return <></>\n                    }\n\n                    return (<Link key={i} {...props} />)\n                })}\n            </ul>\n        </div>\n    )\n};\n","import React from 'react';\n\nexport const Views = () => {\n    return (\n        <div>\n            <h4>What am I looking for</h4>\n            <p>New Challenges, Product Company, full time, office, remote, relocation is not an issue</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { education } from '../../data/cv_data';\n\nconst Item = ({ exp }) => {\n\n    let { name, degree, dates, paper } = exp\n\n    const { start, end } = dates\n\n    return (\n        <li>\n            <strong>{name}</strong>\n            <div>{start.getFullYear()} - {end.getFullYear()}</div>\n            {degree\n                ? (<div>Degree: {degree.name}, {degree.subject}</div>)\n                : (<></>)}\n            {paper\n                ? (<div>Paper: {paper}</div>)\n                : (<></>)}\n        </li>\n    )\n}\n\nexport const Education = () => {\n\n    return (\n        <div>\n            <h3>Education</h3>\n            <ul>\n                {education.map((e, index) => <Item key={index} exp={e} />)}\n            </ul>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport { current_skills as skills } from '../../data/cv_data';\n\nconst Skill = ({ name, value }) => {\n\n    if (!Array.isArray(value))\n        value = [ value ]\n\n    return (\n        <tr>\n            <td><b>{ name }</b></td>\n            <td>{ value.reduce((a, b) => a + \", \" + b) }</td>\n        </tr>\n    )\n}\n\nexport const Skills = () => {\n\n    return (\n        <div>\n            <h3>Actual Skills</h3>\n            <Table>\n                <tbody>\n                { skills.map((s, i) => <Skill key={ i } { ...s } />) }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Photo = () => {\n    return (\n        <div style={{\n            alignSelf: 'center',\n            padding: \"10px\"\n        }}>\n            <img src={\"/static/photo.png\"}\n                alt=\"_photo_\"\n                style={{\n                    width: '100%'\n                }} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { experiences } from '../../data/cv_data';\nimport { prettyPeriod } from '../../utils/CustomDateUtils';\n\nconst ShortTechStack = ({ t }) => {\n\n    if (!t) {\n        return (<></>)\n    }\n\n    const _toString = (o) => {\n        if (!o) {\n            return \"\"\n        }\n\n        if (!Array.isArray(o)) {\n            o = [ o ]\n        }\n\n        if (o.length > 0) {\n            return o.filter((w) => w.length > 0)\n                .reduce((a, b) => a + \", \" + b)\n        }\n\n        return \"\"\n    }\n\n    const language = _toString(t.language)\n    const frameworks = _toString(t.frameworks)\n    const storage = _toString(t.storage)\n\n    const content = _toString([ language, frameworks, storage ])\n\n    return (\n        <div>\n            <p>\n                <b>Tech Stack:</b> { content }\n            </p>\n        </div>\n    )\n}\n\nconst ShortExpItem = ({ n, name, id, dates, description, techStack }) => {\n\n    return (\n        <div>\n            <hr />\n            <h5 id={ id }>{ n }. { name } ({ prettyPeriod(dates) })</h5>\n            <p>\n                { description }\n            </p>\n            <ShortTechStack t={ techStack } />\n        </div>\n    )\n}\n\nconst ShortExpList = () => {\n    return (\n        <div>\n            { experiences.map((exp, i) => {\n\n                if (exp.excess) {\n                    return <></>\n                }\n\n                let newExp = { ...exp, n: (i + 1) }\n                return (\n                    <ShortExpItem key={ i } { ...newExp } />\n                )\n            }) }\n        </div>\n    )\n}\n\nconst BigExpList = () => {\n    return (\n        <div>\n            <h3>ExpList</h3>\n        </div>\n    )\n}\n\nexport const ExpList = ({ short = true }) => {\n    return (\n        <div>\n            <h3>Experience</h3>\n            { short ? <ShortExpList /> : <BigExpList /> }\n        </div>\n    )\n}\n","import React from 'react'\nimport { info } from '../../data/cv_data'\n\nexport const Languages = () => {\n\n    let content = info.language\n        .map(({ name, level }) => (`${ name } (${ level })`))\n        .reduce((word0, word1) => (`${ word0 }, ${ word1 }`))\n\n    return (\n        <div>\n            <h4>Languages</h4>\n            <p>\n                { content }\n            </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { Header } from '../cv/Header';\nimport { About } from '../cv/About';\nimport { Contacts } from '../cv/Contacts';\nimport { Views } from '../cv/Views';\nimport { Education } from '../cv/Education';\nimport { Skills } from '../cv/Skills';\nimport { Photo } from '../cv/Photo';\nimport { ExpList } from '../cv/ExpList';\nimport { Languages } from '../cv/Languages'\n\nconst Line = ({ children }) => {\n    return (\n        <Row>\n            <Col xs={ 12 }>\n                { children }\n            </Col>\n        </Row>\n    )\n}\n\nexport const MainCV = () => {\n\n    React.useEffect(() => {\n        document.title = `CV: Dmytro Horkhover`;\n    })\n\n    return (\n        <div>\n            <header>\n                <Line><Header /></Line>\n            </header>\n            <main>\n                <Row>\n                    <Col xs={ 9 }>\n                        <Line><About /></Line>\n                        <Line><Languages /></Line>\n                        <Line><Views /></Line>\n                        <Line><Contacts /></Line>\n                    </Col>\n                    <Col xs={ 3 }>\n                        <Line><Photo /></Line>\n                    </Col>\n                </Row>\n                <Line><Education /></Line>\n                <Line><Skills /></Line>\n                <Line><ExpList short={ true } /></Line>\n            </main>\n            <footer>\n\n            </footer>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Hobbies = () => {\n    return (\n        <div>\n            <h4>Hobbies</h4>\n            <p>Traveling, Motorcycles, Gym, Football, Cars, Bicycles</p>\n        </div>\n    )\n}","import React from 'react';\nimport { Table } from 'react-bootstrap'\n\nconst TextBlock = ({ title, content }, index) => {\n\n    if (content || (Array.isArray(content) && content.length > 0)) {\n        if (!Array.isArray(content)) {\n            content = [content]\n        }\n\n        if (content.length <= 0) {\n            return <></>\n        }\n\n        content = content.reduce((a, b) => `${a}, ${b}`)\n        // content = content.map((line, i) => <span key={i}>{line}</span>)\n\n        return (\n            <tr key={index}>\n                <td>\n                    <b>{title}</b>:\n                </td>\n                <td>{content}</td>\n            </tr>\n        )\n    }\n    return null;\n}\n\nexport const TechStack = ({ techStack, expIndex }) => {\n    if (techStack) {\n        return (\n            <div>\n                <h5>Stack of technologies</h5>\n                <Table id={`${Math.random()}`}>\n                    <tbody>\n                        <TextBlock title=\"Language\" content={techStack.language} />\n                        <TextBlock title=\"Frameworks &amp; Libs\" content={techStack.frameworks} />\n                        <TextBlock title=\"Production env\" content={techStack.prod_env} />\n                        <TextBlock title=\"Build Tool\" content={techStack.build_tool} />\n                        <TextBlock title=\"CI/CD\" content={techStack.ci_cd} />\n                        <TextBlock title=\"Storage\" content={techStack.storage} />\n                        <TextBlock title=\"VCS\" content={techStack.vcs} />\n                        <TextBlock title=\"Metrics System\" content={techStack.metrics} />\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n    return null;\n};\n","import React from \"react\";\nimport { ExperienceEntry } from \"./ExperienceEntry\";\n\nexport const InnerExperiences = ({ experiences, indexSuffix }) => {\n\n    if (experiences) {\n\n        const innerExp = experiences.map((experience, index) => {\n            index = index + 1;\n            return (\n                <ExperienceEntry\n                    key={index}\n                    index={index}\n                    indexSuffix={indexSuffix}\n                    experience={experience} />\n            )\n        });\n\n        return <div>{innerExp}</div>\n    }\n    return null;\n};\n","import React from 'react';\n\nconst Link = ({ name, url, target = \"_blank\" }) => {\n    return (\n        <li>\n            <a href={url} target={target}>{name ? name : url}</a>\n        </li>\n    )\n}\n\nexport const ExperienceLinks = ({ links }) => {\n\n    if (!links)\n        return (<></>)\n\n    return (\n        <div>\n            <h5>Links</h5>\n            <ul>\n                {links.map((link, index) => (<Link key={index} {...link} />))}\n            </ul>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { TechStack } from \"./TechStack\";\nimport { InnerExperiences } from \"./InnerExperiences\";\nimport { prettyPeriod } from \"../../../../../utils/CustomDateUtils\";\nimport { ExperienceLinks } from \"./ExperienceLinks\";\n\nconst TextBlock = ({ title, text }) => {\n    if (text != null || (Array.isArray(text) && text.length > 0)) {\n        if (!Array.isArray(text))\n            text = [text]\n        text = text.map((text_item, i) => <p key={i}>{text_item}</p>)\n        return (\n            <div>\n                <h5>{title}</h5>\n                <div>{text}</div>\n            </div>\n        )\n    }\n    return null;\n}\n\nexport const ExperienceEntry = ({ experience: exp, indexSuffix, index }) => {\n\n    if (indexSuffix)\n        index = indexSuffix + '.' + index\n\n    const id = (exp.id) ? exp.id : (\"\" + Math.random())\n    const title = `${index}. ${exp.name} (${exp.city}, ${prettyPeriod(exp.dates)})`\n\n    return (\n        <div>\n            <hr style={{ margin: \"2rem 0\" }} />\n            <h4 id={id}>{title}</h4>\n            <TextBlock title=\"Description\" text={exp.description} />\n            <TextBlock title=\"Responsibility\" text={exp.responsibility} />\n            <TextBlock title=\"Achievements\" text={exp.achievements} />\n            <TextBlock title=\"Current State\" text={exp.currentState} />\n            <TechStack expIndex={index} techStack={exp.techStack} />\n            <ExperienceLinks links={exp.links} />\n            <InnerExperiences experiences={exp.inner} indexSuffix={index} />\n        </div>\n    )\n}\n","import React from 'react';\nimport { experiences } from \"../../../../../data/cv_data\";\nimport { ExperienceEntry } from \"./ExperienceEntry\";\n\nexport const ExperienceList = () => {\n\n    const content = experiences.map((experience, i) => (\n        <ExperienceEntry key={i} index={i + 1} experience={experience} />\n    ));\n\n    return (\n        <div>{content}</div>\n    )\n};\n","import React from 'react';\nimport { experiences } from '../../../../../data/cv_data';\nimport { prettyPeriod } from '../../../../../utils/CustomDateUtils';\n\nexport const TableOfContent = () => {\n\n    const mapperFn = (exp, index) => {\n        const { name, id, dates, showDates, inner } = exp\n\n        let period\n\n        if (!(showDates === false)) {\n            period = (\n                <span style={{ color: \"#555\" }}>\n                    {` (${prettyPeriod(dates)})`}\n                </span>\n            )\n        }\n\n        return (\n            <li key={index}>\n                <span style={{ color: \"#222\" }}>\n                    <a href={'#' + id}>{`${index + 1}. ${name}`}</a>\n                    {period}\n                </span>\n                {inner && content({ exps: inner })}\n            </li>\n        )\n    }\n\n    const content = ({ exps }) => {\n        return (\n            <ul style={{ listStyle: 'none' }}>\n                {exps.map(mapperFn)}\n            </ul>\n        )\n    }\n\n    return (\n        <div>\n            <h4>Table Of Contents</h4>\n            {content({ exps: experiences })}\n        </div>\n    )\n};\n","import React from 'react';\nimport { ExperienceList } from \"./ExperienceList\";\nimport { TableOfContent } from \"./TableOfContent\";\n\nexport const Experience = () => {\n    return (\n        <div>\n            <h3 style={{ marginTop: '0px' }}>Experience</h3>\n            <TableOfContent />\n            <ExperienceList />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Header } from '../cv/Header';\nimport { About } from '../cv/About';\nimport { Views } from '../cv/Views';\nimport { Hobbies } from '../cv/Hobbies';\nimport { Education } from '../cv/Education';\nimport { Skills } from '../cv/Skills';\nimport { Photo } from '../cv/Photo';\nimport { Experience } from '../main/cv/tech/right/Experience';\n\nexport const TechCV = () => {\n\n    React.useEffect(() => {\n        document.title = `CV: Dmytro Horkhover`;\n    })\n\n    return (\n        <div>\n            <header>\n                <Row>\n                    <Col xs={12}>\n                        <Header />\n                    </Col>\n                </Row>\n            </header>\n            <main>\n                <Row>\n                    <Col xs={2} className=\"bg-dark\">\n                        <Photo />\n                        <About />\n                        <Views />\n                        <Hobbies />\n                    </Col>\n                    <Col xs={10}>\n                        <Row>\n                            <Col xs={12}>\n                                <Education />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12}>\n                                <Skills />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={12}>\n                                <Experience />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </main>\n            <footer>\n                \n            </footer>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Home = () => {\n\n    React.useEffect(() => {\n        document.title = \"Home\";\n    });\n    \n    return (\n        <div>\n            <h1>Home Page</h1>\n            <Link to='/cv/main' className='nav-link'>Short CV</Link>\n            <Link to='/cv/tech' className='nav-link'>Technical CV</Link>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nimport { MainCV as MainCVPage } from './page/MainCV';\nimport { TechCV as TechCVPage } from './page/TechCV';\nimport { Home as HomePage } from './page/Home';\n\nconst Navigation = () => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            {/* <Navbar.Brand href=\"/\">Dmytro Horkhover</Navbar.Brand> */}\n\n            <Navbar.Brand as={Link} to='/'>Dmytro Horkhover</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n            <Nav className=\"mr-auto\">\n                <NavDropdown title=\"CV\" id=\"basic-nav-dropdown\">\n\n                    <NavDropdown.Item as={Link} to='/cv/main'>Main CV</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item as={Link} to='/cv/tech'>Technical CV</NavDropdown.Item>\n\n                </NavDropdown>\n            </Nav>\n        </Navbar>\n    )\n}\n\nconst Routers = () => {\n    return (\n        <Container fluid='lg' className=\"main-container\">\n\n            <Route exact={true} path='/' component={HomePage} />\n            <Route exact={true} path='/cv/tech' component={TechCVPage} />\n            <Route exact={true} path='/cv/main' component={MainCVPage} />\n\n        </Container>\n    )\n}\n\nexport const App = () => {\n\n    return (\n        <Router>\n            <Navigation />\n            <Routers />\n        </Router>\n    )\n}\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { App } from \"./components\";\nimport './css/index.scss'\n\n// https://github.com/facebook/create-react-app\n// https://learn.javascript.ru/screencast/react#react-state\n// https://dev.to/javascripterika/deploy-a-react-app-as-a-github-user-page-with-yarn-3fka\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}